// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    DMux8Way(in=load, sel=address[3..5], a=load1, b=load2, c=load3, d=load4, e=load5, f=load6, g=load7, h=load8);
    RAM8(in=in, load=load1, address=address[0..2], out=result1);
    RAM8(in=in, load=load2, address=address[0..2], out=result2);
    RAM8(in=in, load=load3, address=address[0..2], out=result3);
    RAM8(in=in, load=load4, address=address[0..2], out=result4);
    RAM8(in=in, load=load5, address=address[0..2], out=result5);
    RAM8(in=in, load=load6, address=address[0..2], out=result6);
    RAM8(in=in, load=load7, address=address[0..2], out=result7);
    RAM8(in=in, load=load8, address=address[0..2], out=result8);
    Mux8Way16(a=result1, b=result2, c=result3, d=result4, e=result5, f=result6, g=result7, h=result8, sel=address[3..5], out=out);
}